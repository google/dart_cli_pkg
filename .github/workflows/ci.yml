name: CI
on:
  push: {branches: [main]}
  pull_request:

jobs:
  analyze:
    name: "Static analysis"

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dart-lang/setup-dart@v1.2
    - run: dart --version
    - run: dart pub get
    - run: dart analyze --fatal-infos --fatal-warnings .

  test:
    name: "Tests | Dart ${{ matrix.dart-channel }} | ${{ matrix.os }} | shard ${{ matrix.shard }}"

    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        dart-channel: [stable, dev]
        shard: [0, 1, 2]
      fail-fast: false

    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - run: node --version

    - uses: dart-lang/setup-dart@v1.2
      with:
        sdk: ${{ matrix.dart-channel }}
    - run: dart --version

    - name: Configure Git
      run: |
        git config --global user.email "ci@local"
        git config --global user.name CI

    - run: dart pub get
    - run: dart run test -r expanded --total-shards 3 --shard-index ${{ matrix.shard }}

  browser-test:
    name: "Browser Tests | Dart ${{ matrix.dart-channel }}"

    strategy:
      matrix:
        dart-channel: [stable, dev]
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
    - uses: browser-actions/setup-chrome@v1
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - run: node --version

    - uses: dart-lang/setup-dart@v1.2
      with:
        sdk: ${{ matrix.dart-channel }}
    - run: dart --version

    - name: Configure Git
      run: |
        git config --global user.email "ci@local"
        git config --global user.name CI
    
    - run: dart pub get
      working-directory: ./browser_library_test

    - run: dart run grinder before-test
      working-directory: ./browser_library_test

    - run: google-chrome --version

    - run: dart run test --platform chrome --exclude-tags not-on-gh-actions
      working-directory: ./browser_library_test
      env: {CHROME_EXECUTABLE: chrome}

  format:
    name: "Code formatting"

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dart-lang/setup-dart@v1.2
    - run: dart --version
    - run: dart format --fix .
    - run: git diff --exit-code
